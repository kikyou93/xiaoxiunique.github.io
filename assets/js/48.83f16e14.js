(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{248:function(_,v,t){"use strict";t.r(v);var e=t(0),a=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h3",{attrs:{id:"_1-你知道tcp协议-ip协议-http协议分别在哪一次吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-你知道tcp协议-ip协议-http协议分别在哪一次吗"}},[_._v("#")]),_._v(" 1. 你知道TCP协议, IP协议, HTTP协议分别在哪一次吗?")]),_._v(" "),t("p",[_._v("传输层，网络层，应用层。")]),_._v(" "),t("h3",{attrs:{id:"_2-osi-参考模型有哪七层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-osi-参考模型有哪七层"}},[_._v("#")]),_._v(" 2. OSI 参考模型有哪七层")]),_._v(" "),t("h4",{attrs:{id:"由低向上"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#由低向上"}},[_._v("#")]),_._v(" 由低向上")]),_._v(" "),t("p",[t("strong",[_._v("1.物理层")])]),_._v(" "),t("p",[_._v("通过媒介传输比特,确定机械及电气规范（比特Bit）")]),_._v(" "),t("p",[_._v("利用传输介质为数据链路层提供物理连接，实现比特流的透明传输, 将电流转化为比特(bit)")]),_._v(" "),t("h4",{attrs:{id:"_2-数据链路层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据链路层"}},[_._v("#")]),_._v(" 2.数据链路层")]),_._v(" "),t("p",[_._v("将比特组装成帧和点到点的传递（帧Frame）")]),_._v(" "),t("h4",{attrs:{id:"_3-网络层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-网络层"}},[_._v("#")]),_._v(" 3.网络层")]),_._v(" "),t("p",[_._v("负责数据包从源到宿的传递和网际互连（包PackeT）")]),_._v(" "),t("h4",{attrs:{id:"_4-传输层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-传输层"}},[_._v("#")]),_._v(" 4.传输层")]),_._v(" "),t("p",[_._v("提供端到端的可靠报文传递和错误恢复（段Segment）")]),_._v(" "),t("h4",{attrs:{id:"_5-会话层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-会话层"}},[_._v("#")]),_._v(" 5.会话层")]),_._v(" "),t("p",[_._v("建立、管理和终止会话（会话协议数据单元SPDU）")]),_._v(" "),t("h4",{attrs:{id:"_6-表示层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-表示层"}},[_._v("#")]),_._v(" 6.表示层")]),_._v(" "),t("p",[_._v("对数据进行翻译、加密和压缩（表示协议数据单元PPDU）")]),_._v(" "),t("h4",{attrs:{id:"_7-应用层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-应用层"}},[_._v("#")]),_._v(" 7.应用层")]),_._v(" "),t("p",[_._v("允许访问OSI环境的手段（应用协议数据单元APDU）")]),_._v(" "),t("h3",{attrs:{id:"_3-简单的描述下tcp的连接和释放过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-简单的描述下tcp的连接和释放过程"}},[_._v("#")]),_._v(" 3.简单的描述下TCP的连接和释放过程")]),_._v(" "),t("ul",[t("li",[_._v("三次握手\n"),t("img",{attrs:{src:"https://raw.githubusercontent.com/xiaoxiunique/Image/master/20190526205305.png",alt:""}})])]),_._v(" "),t("ol",[t("li",[_._v("主机A向主机B发送TCP连接请求包, 其中A的初始序列号为"),t("code",[_._v("seq(A)=x")]),_._v("(Sequence 序列号). 此时客户端进入"),t("code",[_._v("SYN-SENT(同步已发送)")]),_._v("状态")]),_._v(" "),t("li",[_._v("主机B接受到请求后, 会发送确认包, "),t("code",[_._v("SYN = 1, ACK = 1, seq = y, ack = x + 1")]),_._v(", 此时主机B进入 "),t("code",[_._v("SYN-RCVD(同步收到)")]),_._v("状态")]),_._v(" "),t("li",[_._v("主机A接受到主机B的确认报文后, 还需做出确认, 发送 "),t("code",[_._v("seq(A) = x + 1")]),_._v(", 确认号为 "),t("code",[_._v("ack(A) = y + 1")])])]),_._v(" "),t("ul",[t("li",[_._v("四次挥手")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/xiaoxiunique/Web-Tip/master/20190529092018.png",alt:""}})]),_._v(" "),t("ol",[t("li",[_._v("第一次挥手: "),t("code",[_._v("Client")]),_._v(" 发送一个"),t("code",[_._v("FIN")]),_._v(", 用来关闭"),t("code",[_._v("Client")]),_._v(" 到"),t("code",[_._v("Server")]),_._v("的数据传送, "),t("code",[_._v("Client")]),_._v(" 进入 "),t("code",[_._v("IN_WAIT_1")]),_._v(" 状态;")]),_._v(" "),t("li",[_._v("第二次挥手: "),t("code",[_._v("Server")]),_._v(" 收到"),t("code",[_._v("FIN")]),_._v("后, 发送一个"),t("code",[_._v("ACK")]),_._v("给"),t("code",[_._v("Client")]),_._v(", 确认序号为收到序号 + 1(与"),t("code",[_._v("SYN")]),_._v("相同, 一个"),t("code",[_._v("FIN")]),_._v("占用一个序号), "),t("code",[_._v("Server")]),_._v("进入"),t("code",[_._v("CLOSE_WAIT")]),_._v("状态")]),_._v(" "),t("li",[_._v("第三次挥手: "),t("code",[_._v("Server")]),_._v("发送一个FIN, 用来关闭"),t("code",[_._v("Server")]),_._v(" 到"),t("code",[_._v("Client")]),_._v(" 的数据传送, "),t("code",[_._v("Server")]),_._v("进入"),t("code",[_._v("LAST_ACK")]),_._v(" 状态")]),_._v(" "),t("li",[_._v("第四次挥手: "),t("code",[_._v("Client")]),_._v(" 收到"),t("code",[_._v("FIN")]),_._v("后, "),t("code",[_._v("Client")]),_._v(" 进入"),t("code",[_._v("TIME_WAIT")]),_._v(" 状态, 接着发送一个"),t("code",[_._v("ACK")]),_._v("给"),t("code",[_._v("Server")]),_._v(", 确认序列号为收到的序号 + 1, "),t("code",[_._v("Server")]),_._v(" 进入"),t("code",[_._v("CLOSED")]),_._v(" 状态, 完成四次挥手")])]),_._v(" "),t("h3",{attrs:{id:"_4-tcp-和-udp-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-tcp-和-udp-的区别"}},[_._v("#")]),_._v(" 4. TCP 和 UDP 的区别")]),_._v(" "),t("ol",[t("li",[_._v("面向连接 vs 无连接")]),_._v(" "),t("li",[_._v("可靠性")]),_._v(" "),t("li",[_._v("有序性 (TCP 利用虚拟号, 保证有序)")]),_._v(" "),t("li",[_._v("速度(UDP 速度比较快)")]),_._v(" "),t("li",[_._v("量级 (TCP 重量级, UDP 轻量级)")])]),_._v(" "),t("h3",{attrs:{id:"_5-tcp-滑窗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-tcp-滑窗"}},[_._v("#")]),_._v(" 5. TCP 滑窗")]),_._v(" "),t("h3",{attrs:{id:"_6-在浏览器输入url，按下回车后会经历哪些流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-在浏览器输入url，按下回车后会经历哪些流程"}},[_._v("#")]),_._v(" 6. 在浏览器输入URL，按下回车后会经历哪些流程")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("DNS")]),_._v(" 解析")])]),_._v(" "),t("p",[_._v("浏览器缓存, 系统存储, 路由器缓存, ip, 域名服务器, 顶级域名服务器")]),_._v(" "),t("ul",[t("li",[_._v("找到"),t("code",[_._v("ip")]),_._v("之后, 建立服务器"),t("code",[_._v("TCP")]),_._v("连接")]),_._v(" "),t("li",[_._v("发送"),t("code",[_._v("HTTP")]),_._v("请求")]),_._v(" "),t("li",[_._v("服务器请求并返回"),t("code",[_._v("HTTP")]),_._v("报文")]),_._v(" "),t("li",[_._v("浏览器解析渲染页面")]),_._v(" "),t("li",[_._v("释放"),t("code",[_._v("TCP")]),_._v("连接("),t("code",[_._v("TCP")]),_._v("四次挥手), 连接结束")])]),_._v(" "),t("h3",{attrs:{id:"_7-http状态码分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-http状态码分类"}},[_._v("#")]),_._v(" 7. HTTP状态码分类")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("1xx")]),_._v(": 指示信息-- 标识请求已接受, 接着处理")]),_._v(" "),t("li",[t("code",[_._v("2xx")]),_._v(": 成功-标识请求已被成功接收, 理解, 接收")]),_._v(" "),t("li",[t("code",[_._v("3xx")]),_._v(": 重定向-- 要完成请求必须进行更进一步的操作")]),_._v(" "),t("li",[t("code",[_._v("4xx")]),_._v(": 客户端错误 -- 请求有语法错误或请求无法实现")]),_._v(" "),t("li",[t("code",[_._v("5xx")]),_._v(": 服务器错误 -- 服务器未能实现合法的请求")])]),_._v(" "),t("h3",{attrs:{id:"_8-get-请求和post请求的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-get-请求和post请求的区别"}},[_._v("#")]),_._v(" 8. GET 请求和POST请求的区别")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("HTTP")]),_._v("报文层面: "),t("code",[_._v("GET")]),_._v("将请求信息放入"),t("code",[_._v("URL")]),_._v(", "),t("code",[_._v("POST")]),_._v("放在请求体重")]),_._v(" "),t("li",[t("code",[_._v("GET")]),_._v(" 请求参数有长度限制, "),t("code",[_._v("POST")]),_._v("中的请求参数没有长度限制")]),_._v(" "),t("li",[_._v("数据库层面: GET请求服务幂等性和安全性, POST不符合")]),_._v(" "),t("li",[_._v("GET请求可以被缓存, 存储, POST不行")])]),_._v(" "),t("h3",{attrs:{id:"_9-cookie-和session-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-cookie-和session-的区别"}},[_._v("#")]),_._v(" 9. Cookie 和Session 的区别")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("Cookie")]),_._v("存在客户端, "),t("code",[_._v("Session")]),_._v("存在服务端")]),_._v(" "),t("li",[t("code",[_._v("Session")]),_._v(" 相对"),t("code",[_._v("Cookie")]),_._v(" 更安全")]),_._v(" "),t("li",[_._v("若考虑到服务器方面的开销, 应该使用"),t("code",[_._v("Cookie")])]),_._v(" "),t("li")]),_._v(" "),t("h3",{attrs:{id:"_10-http-和-https-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-http-和-https-的区别"}},[_._v("#")]),_._v(" 10. HTTP 和 HTTPS 的区别")]),_._v(" "),t("ul",[t("li",[_._v("HTTPS 需要到CA申请证书, HTTP不需要")]),_._v(" "),t("li",[_._v("HTTPS 密文传输, HTTP明文传输")]),_._v(" "),t("li",[_._v("连接方式不同, HTTPS 默认使用443 端口, HTTP 使用80端口")]),_._v(" "),t("li",[_._v("HTTPS=HTTP + 加密 + 认证 + 完成性保护, 较HTTP 安全")])])])}),[],!1,null,null,null);v.default=a.exports}}]);